# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Errors
    

      class BackendSrcTaxEstimationResponsesValidationErrorResponse
        extend T::Sig
        include Crystalline::MetadataFields


        field :detail, T::Array[Models::Components::BackendSrcTaxEstimationResponsesValidationErrorItem], { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('detail'), required: true } }
        # Raw HTTP response; suitable for custom response parsing
        field :raw_response, T.nilable(::Faraday::Response), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('-') } }

        sig { params(detail: T::Array[Models::Components::BackendSrcTaxEstimationResponsesValidationErrorItem], raw_response: T.nilable(::Faraday::Response)).void }
        def initialize(detail:, raw_response: nil)
          @detail = detail
          @raw_response = raw_response
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          T.cast(other, BackendSrcTaxEstimationResponsesValidationErrorResponse)
          return false unless @detail == other.detail
          return false unless @raw_response == other.raw_response
          true
        end
      end
    end
  end
end
