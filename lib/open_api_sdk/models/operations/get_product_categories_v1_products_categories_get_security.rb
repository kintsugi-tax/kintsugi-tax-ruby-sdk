# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Operations
    

      class GetProductCategoriesV1ProductsCategoriesGetSecurity
        extend T::Sig
        include Crystalline::MetadataFields


        field :api_key_header, T.nilable(::String), { 'security': { 'scheme': true, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-API-KEY' } }

        field :http_bearer, T.nilable(::String), { 'security': { 'scheme': true, 'type': 'http', 'sub_type': 'bearer', 'field_name': 'Authorization' } }

        sig { params(api_key_header: T.nilable(::String), http_bearer: T.nilable(::String)).void }
        def initialize(api_key_header: nil, http_bearer: nil)
          @api_key_header = api_key_header
          @http_bearer = http_bearer
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          T.cast(other, GetProductCategoriesV1ProductsCategoriesGetSecurity)
          return false unless @api_key_header == other.api_key_header
          return false unless @http_bearer == other.http_bearer
          true
        end
      end
    end
  end
end
