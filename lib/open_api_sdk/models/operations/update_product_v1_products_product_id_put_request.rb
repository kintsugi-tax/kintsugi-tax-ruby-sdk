# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Operations
    

      class UpdateProductV1ProductsProductIdPutRequest
        extend T::Sig
        include Crystalline::MetadataFields

        # Unique identifier of the product to be updated.
        field :product_id, ::String, { 'path_param': { 'field_name': 'product_id', 'style': 'simple', 'explode': false } }

        field :request_body, T.any(Models::Components::ProductUpdate, Models::Components::ProductUpdateV2), { 'request': { 'media_type': 'application/json' } }
        # The unique identifier for the organization making the request
        field :x_organization_id, T.nilable(::String), { 'header': { 'field_name': 'x-organization-id', 'style': 'simple', 'explode': false } }

        sig { params(product_id: ::String, request_body: T.any(Models::Components::ProductUpdate, Models::Components::ProductUpdateV2), x_organization_id: T.nilable(::String)).void }
        def initialize(product_id:, request_body:, x_organization_id: nil)
          @product_id = product_id
          @request_body = request_body
          @x_organization_id = x_organization_id
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          T.cast(other, UpdateProductV1ProductsProductIdPutRequest)
          return false unless @product_id == other.product_id
          return false unless @request_body == other.request_body
          return false unless @x_organization_id == other.x_organization_id
          true
        end
      end
    end
  end
end
