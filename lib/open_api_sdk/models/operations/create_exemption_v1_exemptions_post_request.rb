# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Operations
    

      class CreateExemptionV1ExemptionsPostRequest
        extend T::Sig
        include Crystalline::MetadataFields


        field :exemption_create, Models::Components::ExemptionCreate, { 'request': { 'media_type': 'application/json' } }
        # The unique identifier for the organization making the request
        field :x_organization_id, T.nilable(::String), { 'header': { 'field_name': 'x-organization-id', 'style': 'simple', 'explode': false } }

        sig { params(exemption_create: Models::Components::ExemptionCreate, x_organization_id: T.nilable(::String)).void }
        def initialize(exemption_create:, x_organization_id: nil)
          @exemption_create = exemption_create
          @x_organization_id = x_organization_id
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          T.cast(other, CreateExemptionV1ExemptionsPostRequest)
          return false unless @exemption_create == other.exemption_create
          return false unless @x_organization_id == other.x_organization_id
          true
        end
      end
    end
  end
end
