# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Components
    

      class ProductCategories
        extend T::Sig
        include Crystalline::MetadataFields

        # Name of the product category
        #             (e.g., PHYSICAL, SERVICE, DIGITAL, MISCELLANEOUS)
        field :name, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('name'), required: true } }
        # List of subcategories associated with the product category
        field :subcategories, T::Array[Models::Components::ProductSubCategory], { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('subcategories'), required: true } }

        sig { params(name: ::String, subcategories: T::Array[Models::Components::ProductSubCategory]).void }
        def initialize(name:, subcategories:)
          @name = name
          @subcategories = subcategories
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          T.cast(other, ProductCategories)
          return false unless @name == other.name
          return false unless @subcategories == other.subcategories
          true
        end
      end
    end
  end
end
