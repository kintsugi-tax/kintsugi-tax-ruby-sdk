# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module KintsugiSDK
  module Models
    module Ops
    

      class EstimateTaxV1TaxEstimatePostRequest
        extend T::Sig
        include Crystalline::MetadataFields


        field :transaction_estimate_public_request, Models::Shared::TransactionEstimatePublicRequest, { 'request': { 'media_type': 'application/json' } }
        # **Deprecated:** Use `simulate_active_registration` in the request body instead.
        # 
        # @deprecated  true: This will be removed in a future release, please migrate away from it as soon as possible.
        field :simulate_nexus_met, Crystalline::Nilable.new(Crystalline::Boolean.new), { 'query_param': { 'field_name': 'simulate_nexus_met', 'style': 'form', 'explode': true } }

        sig { params(transaction_estimate_public_request: Models::Shared::TransactionEstimatePublicRequest, simulate_nexus_met: T.nilable(T::Boolean)).void }
        def initialize(transaction_estimate_public_request:, simulate_nexus_met: nil)
          @transaction_estimate_public_request = transaction_estimate_public_request
          @simulate_nexus_met = simulate_nexus_met
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @transaction_estimate_public_request == other.transaction_estimate_public_request
          return false unless @simulate_nexus_met == other.simulate_nexus_met
          true
        end
      end
    end
  end
end
