# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module KintsugiSDK
  module Models
    module Errors
    

      class BackendSrcTransactionsResponsesValidationErrorResponse
        extend T::Sig
        include Crystalline::MetadataFields


        field :detail, Crystalline::Array.new(Models::Shared::BackendSrcTransactionsResponsesValidationErrorItem), { 'format_json': { 'letter_case': ::KintsugiSDK::Utils.field_name('detail'), required: true } }

        sig { params(detail: T::Array[Models::Shared::BackendSrcTransactionsResponsesValidationErrorItem]).void }
        def initialize(detail:)
          @detail = detail
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @detail == other.detail
          true
        end
      end
    end
  end
end
