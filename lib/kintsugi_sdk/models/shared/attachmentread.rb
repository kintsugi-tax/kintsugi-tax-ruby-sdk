# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module KintsugiSDK
  module Models
    module Shared
    

      class AttachmentRead
        extend T::Sig
        include Crystalline::MetadataFields

        # The unique identifier of the exemption associated
        #         with the attachment.
        field :related_entity_id, ::String, { 'format_json': { 'letter_case': ::KintsugiSDK::Utils.field_name('related_entity_id'), required: true } }

        field :related_entity_type, Models::Shared::RelatedEntityType, { 'format_json': { 'letter_case': ::KintsugiSDK::Utils.field_name('related_entity_type'), required: true, 'decoder': Utils.enum_from_string(Models::Shared::RelatedEntityType, false) } }
        # The unique identifier of the uploaded attachment (attachment ID).
        field :id, ::String, { 'format_json': { 'letter_case': ::KintsugiSDK::Utils.field_name('id'), required: true } }

        sig { params(related_entity_id: ::String, related_entity_type: Models::Shared::RelatedEntityType, id: ::String).void }
        def initialize(related_entity_id:, related_entity_type:, id:)
          @related_entity_id = related_entity_id
          @related_entity_type = related_entity_type
          @id = id
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @related_entity_id == other.related_entity_id
          return false unless @related_entity_type == other.related_entity_type
          return false unless @id == other.id
          true
        end
      end
    end
  end
end
