# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module KintsugiSDK
  module Models
    module Shared
    

      class Security
        extend T::Sig
        include Crystalline::MetadataFields


        field :api_key_header, ::String, { 'security': { 'scheme': true, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-API-KEY' } }

        field :custom_header, ::String, { 'security': { 'scheme': true, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'x-organization-id' } }

        sig { params(api_key_header: ::String, custom_header: ::String).void }
        def initialize(api_key_header:, custom_header:)
          @api_key_header = api_key_header
          @custom_header = custom_header
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @api_key_header == other.api_key_header
          return false unless @custom_header == other.custom_header
          true
        end
      end
    end
  end
end
